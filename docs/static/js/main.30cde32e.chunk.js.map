{"version":3,"sources":["modules/lightsout.ts","components/ThreeBox.js","components/ThreeMatrixBox.js","components/CameraController.js","components/CanvasC.js","components/App.js","etc/serviceWorker.js","index.js"],"names":["isProblemDifficult","n","isIdt_mtrx","mtrx","some","row","idx1","j","idx2","arrayDeepCp","array","JSON","parse","stringify","toShowAnsMap","state","toAnsMtrx","arr","Array","Math","floor","length","keys","map","i","slice","eachSlice","idx","filter","ThreeBox","props","mesh","useRef","boxSize","window","innerWidth","innerHeight","useFrame","showAnsFlag","ansMap","x","y","current","rotation","ref","attach","args","color","N","location","href","split","parseInt","statusLights","random","console","log","toIdt","fMapLights","mapLightsInv","fIdt_mtrx","forEach","v","jFrontAllZeroRow","row_","i_","includes","v_","j_","bef","join","self","indexOf","lastIndexOf","sort","reverse","aft","btoa","tmp","xs","warn","F2_Gauss_Jordan","defaultAnsMap","flat","ThreeMatrixBox","useState","setState","basezDistance","preIdx","_","idxes","lists","xyz","active","push","onClick","index","add","clickBox","answer","key","position","defaultProps","extend","OrbitControls","CameraController","useThree","camera","gl","useEffect","controls","domElement","set","minDistance","maxDistance","dispose","CanvasC","App","AppContainer","AnsShowButton","className","hide","show","Link","styled","div","button","glimpse","keyframes","linkPositionTop","a","css","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uPA+BaA,EAAqB,SAACC,GAC/B,OAAOA,EAAI,IA4CFC,EAAa,SAACC,GACvB,OAAQA,EAAKC,MAAK,SAACC,EAAIC,GACnB,OAAOD,EAAID,MAAK,SAACG,EAAEC,GACf,OAAQF,IAAOE,GAAY,IAAJD,GAAWD,IAAOE,GAAY,IAAJD,SAOhDE,EAAc,SAACC,GACxB,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,KAkFxBI,EAAe,SAACC,EAAkBC,EAAwBf,GACnE,OATqB,SAACgB,GAAiD,IAAjChB,EAAgC,uDAAnB,EACnD,OAAO,YAAIiB,MAAMC,KAAKC,MAAMH,EAAII,OAASpB,IAAIqB,QAAQC,KAAI,SAAAC,GACrD,OAAOP,EAAIQ,MAAMD,EAAEvB,EAAGuB,EAAEvB,EAAIA,MAOzByB,CAAUV,EAAUO,KAAI,SAAAlB,GAC3B,OAE2B,EAFpBA,EAAIkB,KAAI,SAACC,EAAEG,GACd,OAAQH,EAAET,EAAMY,MACjBC,QAAO,SAAAJ,GAAC,OAAM,IAAJA,KAAOH,UACpBpB,ICvJO4B,IDce5B,ECdf4B,EAnBf,SAAkBC,GACd,IAAMC,EAAOC,mBAEP/B,EAAI6B,EAAM7B,EAEVgC,GADUC,OAAOC,WAAaD,OAAOE,YAAcF,OAAOE,YAAgC,KAAlBF,OAAOC,aACxD,EAAFlC,GAI3B,OAFAoC,aAAS,WAAQP,EAAMQ,aAAgD,IAAjCR,EAAMS,OAAOT,EAAMU,GAAGV,EAAMW,GAAUV,EAAKW,QAAQC,SAASF,GAAK,GAAMV,EAAKW,QAAQC,SAASF,EAAI,KAGnI,0CACQX,EADR,CAEIc,IAAKb,IACD,uCAAmBc,OAAO,WAAWC,KAAM,CAACb,EAASA,EAASA,KAC9D,0CAAsBY,OAAO,WAAWE,MAAOjB,EAAMiB,UCR/DC,GAAKd,OAAOe,SAASC,KAAKC,MAAM,KAAK,IAAMC,SAASlB,OAAOe,SAASC,KAAKC,MAAM,KAAK,IAAM,EAAI,EAAIC,SAASlB,OAAOe,SAASC,KAAKC,MAAM,KAAK,IAG3IlB,GADUC,OAAOC,WAAaD,OAAOE,YAAcF,OAAOE,YAAgC,KAAlBF,OAAOC,aACxD,EAAFa,GAGrBK,GFqBwBpD,EErBK+C,EFsBxB,YAAI9B,MAAMjB,GAAGqB,QAAQC,KAAI,SAAAC,GAC5B,OAAO,YAAIN,MAAMjB,GAAGqB,QAAQC,KAAI,SAAAhB,GAC5B,OAAOY,KAAKC,MAAoB,EAAdD,KAAKmC,iBErBnCC,QAAQC,IACJxD,EAAmBgD,GAAK,YAAc,QAc1C,IAVA,IAAMS,EFwBoB,SAACxD,GACvB,OAAO,YAAIiB,MAAMjB,EAAEA,GAAGqB,QAAQC,KAAI,SAAAC,GAC9B,OAAO,YAAIN,MAAMjB,EAAEA,GAAGqB,QAAQC,KAAI,SAAAhB,GAC9B,OACIiB,IAAMjB,GACL,GAAKiB,EAAE,GAAKA,EAAE,IAAMjB,GAAKA,EAAEN,IAAIA,EAAE,GACjCuB,EAAE,EAAIvB,EAAEA,GAAKuB,EAAE,IAAMjB,GAAKA,EAAEN,IAAI,GAChC,GAAKuB,EAAEvB,GAAKuB,EAAEvB,IAAMM,GACpBiB,EAAEvB,EAAIA,EAAEA,GAAKuB,EAAEvB,IAAMM,EACjB,EACF,QElCLmD,CAAWV,GAGnBW,EFsCmB,SAAC1D,GACtB,OAAO,YAAIiB,MAAMjB,EAAEA,GAAGqB,QAAQC,KAAI,SAAAC,GAC9B,OAAO,YAAIN,MAAMjB,EAAEA,GAAGqB,QAAQC,KAAI,SAAAhB,GAC9B,OAAIiB,IAAIjB,EAAU,EACX,QE1CEqD,CAAUZ,GAGzBhC,EF+DyB,SAACf,EAAYwD,EAAoBE,GAG5D,IAHgH,IAAD,aAK3GF,EAAMI,SAAQ,SAACxD,EAAKmB,GAEuB,IAAnCnB,EAAIuB,QAAO,SAAAkC,GAAC,OAAQ,IAAJA,KAAQzC,QAAyB,IAAThB,EAAImB,IAEhDnB,EAAIwD,SAAQ,SAACC,EAAGvD,GAIZ,GAAIA,IAAIiB,GAAS,IAAJsC,EAAb,CAMA,IACInC,EADAoC,EAA8B,GAElCN,EAAMrD,MAAK,SAAC4D,EAAMC,GACd,OAAIA,IAAKzC,IAAMwC,EAAKvC,MAAM,EAAGlB,GAAG2D,SAAS,IAAgB,IAAVF,EAAKxC,KAChDuC,EAAmBtD,EAAYuD,GAC/BrC,EAAMsC,GACC,MAIfF,EAAiBF,SAAQ,SAACM,EAAIC,GAC1BX,EAAMjC,GAAG4C,GAAOX,EAAMjC,GAAG4C,GAAMD,EAAI,EACnCR,EAAanC,GAAG4C,GAAOT,EAAanC,GAAG4C,GAAMT,EAAahC,GAAKyC,GAAK,YAQhF,IAAIC,EAAMZ,EAAMlC,KAAI,SAAAlB,GAAS,OAAOA,EAAIiE,KAAK,OAI7C,GADmBD,EAAIzC,QAAO,SAAUY,EAAGhB,EAAG+C,GAAQ,OAAOA,EAAKC,QAAQhC,KAAOhB,GAAKA,IAAM+C,EAAKE,YAAYjC,MAC5FnB,OAAS,EAAG,cAC7BoC,EAAMiB,OAAOC,UAGb,IAAIC,EAAMnB,EAAMlC,KAAI,SAAAlB,GAAS,OAAOA,EAAIiE,KAAK,OAEzCO,EAAOR,EAAI9C,KAAI,SAAAlB,GAAS,OAAOuE,EAAIJ,QAAQnE,MAC3CyE,EAAG,YAAO5D,MAAMjB,IACpB4E,EAAKhB,SAAQ,SAACtD,EAAEiB,GAAQsD,EAAIvE,GAAKE,EAAYkD,EAAanC,OAE1DsD,EAAIjB,SAAQ,SAACxD,EAAImB,GAAQmC,EAAanC,GAAKf,EAAYJ,QAlDnDH,EAAWuD,IAAQ,kBAwCM,MAcjC,OAAKvD,EAAWuD,IAKhBF,QAAQC,IAAI,QAAS,KAAMC,EAAMlC,KAAI,SAAAwD,GAAO,OAAOA,EAAGT,KAAK,SAAQA,KAAK,MAAO,MAC/Ef,QAAQC,IAAI,eAAgB,KAAMG,EAAapC,KAAI,SAAAwD,GAAO,OAAOA,EAAGT,KAAK,SAAQA,KAAK,MAAO,MACtFX,IANHJ,QAAQyB,KAAK,+BACN,GE1HGC,CAAgBjC,EAAGS,EAAOE,GAGtCuB,EAAgB,GACb1D,EAAI,EAAGA,EAAIwB,EAAGxB,IAAK,CACxB0D,EAAc1D,GAAK,GACnB,IAAK,IAAIjB,EAAI,EAAGA,EAAIyC,EAAGzC,IAAK2E,EAAc1D,GAAGjB,GAAK,EAItD,IAAIgC,GAAWvC,EAAmBgD,IAAMhC,EAAaF,EAAauC,EAAa8B,OAAQnE,EAAWgC,GAAKkC,EA8BvG,SAASE,EAAetD,GACPE,mBAAb,IAD2B,EAGDqD,mBAASvD,GAHR,mBAGpBf,EAHoB,KAGbuE,EAHa,KAKrBC,EAAgBtD,EAAUA,EAAU,EAEpCuD,EAAS,YAAItE,MAAM8B,GAAG1B,QAAQC,KAAI,SAACkE,EAAGjE,GACxC,OAAQA,EAAIL,KAAKC,MAAM4B,EAAI,IAAMuC,GAAmB,EAAFvC,EAAM,EAAIuC,EAAc,MAGxEG,EAAQF,EAAOjE,KAAI,SAAAC,GAAM,OAAOgE,EAAOjE,KAAI,SAAAhB,GAAM,MAAO,CAACiB,EAAGjB,EAAG,SAAS4E,OAExEQ,EAAQ,GAba,WAenBC,GACJ,IAxCUC,EAwCNpD,EAAIW,SAASA,SAASsC,EAAME,GAAK,GAAKL,GAAiBpE,KAAKC,MAAM4B,EAAE,IACpER,EAAKQ,EAAE,EAAGI,SAASA,SAASsC,EAAME,GAAK,GAAKL,GAAiBpE,KAAKC,MAAM4B,EAAE,IAE9E2C,EAAMG,KACF,kBAAC,EAAD,CACIC,QAAS,YAxCzB,SAAkBC,GACd,IAAMvD,EAAIuD,EAAM,GACVxD,EAAIwD,EAAM,GAChB3C,EAAab,GAAGC,GAA2B,GAArBY,EAAab,GAAGC,GAEtC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAIoB,SAAQ,SAACoC,GAC9B,GAAGA,EAAI,GAAGzD,GAAKyD,EAAI,GAAGzD,EAAEQ,GAAK,GAAGiD,EAAI,GAAGxD,GAAKwD,EAAI,GAAGxD,EAAEO,IACpDK,EAAa4C,EAAI,GAAGzD,GAAGyD,EAAI,GAAGxD,GAAyC,GAAnCY,EAAa4C,EAAI,GAAGzD,GAAGyD,EAAI,GAAGxD,QAIrEzC,EAAmBgD,IAAMhC,IAC1BuB,EAASzB,EAAauC,EAAa8B,OAAQnE,EAAWgC,IAG1DO,QAAQC,IAAIH,EAAa9B,KAAI,SAAAwD,GAAO,OAAOA,EAAGT,KAAK,SAAQA,KAAK,OAChEf,QAAQC,IAAIjB,EAAOhB,KAAI,SAAAwD,GAAO,OAAOA,EAAGT,KAAK,SAAQA,KAAK,OAyB1C4B,CAAS,CAACzD,EAAED,IACZ8C,EAAS,2BAAIvE,GAAL,IAAY8E,OAAQxC,EAAc8C,OAAQ5D,MAEtD6D,IAAKR,EACLnD,EAAGA,EACHD,EAAGA,EACHvC,EAAG+C,EACHV,YAAaR,EAAMQ,YACnBC,OAAQxB,EAAMoF,OACdE,SAAUX,EAAME,GAChB7C,OAxDE8C,EAwDc9E,EAAM8E,OAAOrD,GAAGC,GAvDxCoD,EAAe,aACZ,qBAqCP,IAAI,IAAID,KAAOF,EAAQ,EAAfE,GAsBR,OACI,8BAAOD,GAIfP,EAAekB,aAAe,CAC1BT,OAAQxC,EACR8C,OAAQ5D,GAGG6C,Q,QC5GfmB,YAAO,CAAEC,oBAET,IAiBeC,EAjBU,WAAO,IAAD,EACJC,cAAfC,EADmB,EACnBA,OAAQC,EADW,EACXA,GAahB,OAXAC,qBAAU,WACF,IAAMC,EAAW,IAAIN,IAAcG,EAAQC,EAAGG,YAI9C,OAHAJ,EAAON,SAASW,IAAI,EAAG,EAHR,KAIfF,EAASG,YAAc,EACvBH,EAASI,YAAc,IAChB,WACHJ,EAASK,aAGjB,CAACR,EAAQC,IAEN,MCPIQ,MAXf,SAAiBtF,GACb,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,uCACA,gCAAYuE,SAAU,CAAC,EAAG,EAAG,OAC7B,kBAAC,EAAD,CAAgB/D,YAAaR,EAAMQ,gB,49CCL/C,SAAS+E,EAAIvF,GAAQ,IAAD,EACUuD,mBAASvD,GADnB,mBACTf,EADS,KACFuE,EADE,KAGhB,OACI,kBAACgC,EAAD,KACI,kBAACC,EAAD,CACIxB,QAAS,WAAQT,EAAS,2BAAIvE,GAAL,IAAYuB,aAAcvB,EAAMuB,gBACzDkF,UAAWzG,EAAMuB,YAAcmF,EAAOC,GACpC3G,EAAMuB,YAAc,OAAS,OAHnC,WAKA,kBAAC,EAAD,CAASA,YAAavB,EAAMuB,cAC5B,kBAACqF,EAAD,CAAMzE,KAAK,sDAAX,iBAOZmE,EAAIf,aAAe,CACfhE,aAAa,GAIjB,IAAMgF,EAAeM,IAAOC,IAAV,KAOZN,EAAgBK,IAAOE,OAAV,KAiBbC,EAAUC,YAAH,KASPC,EAAkB/F,OAAOE,YAAcF,OAAOC,WAAa,OAAS,OAEpEwF,EAAOC,IAAOM,EAAV,IAQCD,EAISF,GAKdN,EAAOU,YAAH,KAMJT,EAAOS,YAAH,KAKKd,IClFKe,QACW,cAA7BlG,OAAOe,SAASoF,UAEe,UAA7BnG,OAAOe,SAASoF,UAEhBnG,OAAOe,SAASoF,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5F,QAAQ4F,MAAMA,EAAMC,c","file":"static/js/main.30cde32e.chunk.js","sourcesContent":["/*************************************************************************************\n//     _     _       _     _    ___        _       ____        _                \n//    | |   (_) __ _| |__ | |_ / _ \\ _   _| |_ ___/ ___|  ___ | |_   _____ _ __ \n//    | |   | |/ _` | '_ \\| __| | | | | | | __/ __\\___ \\ / _ \\| \\ \\ / / _ \\ '__|\n//    | |___| | (_| | | | | |_| |_| | |_| | |_\\__ \\___) | (_) | |\\ V /  __/ |   \n//    |_____|_|\\__, |_| |_|\\__|\\___/ \\__,_|\\__|___/____/ \\___/|_| \\_/ \\___|_|   \n//             |___/                                                            \n//\n//    Refarence:\n//\n//   - https://ja.wikipedia.org/wiki/%E9%9A%A3%E6%8E%A5%E8%A1%8C%E5%88%97\n//   - https://www.gensu.co.jp/saito/puzzle/a38lightsout1.html\n//   - http://www.math.okayama-u.ac.jp/~mi/lecture/pdf/galois.pdf\n//\n//\n//   Depend on a Theory of Algebra\n//\n//   - F_2 Field: {1,0} only\n//\n//    (+)| 0 | 1      (*)| 0 | 1 \n//   -------------   -------------\n//     0 | 0 | 1       0 | 0 | 0  \n//   -------------   -------------\n//     1 | 1 | 0       1 | 0 | 1  \n//\n//\n//    Provided by Zodiac-G12\n//\n*************************************************************************************/\n\n// Nが15より大きいと配列サイズ・計算量的に困難になる（ブラウザという方法論に於いてのみに限る主張）\nexport const isProblemDifficult = (n : number) : boolean => {\n    return n > 20;\n}\n\n\n// ライトの初期値をランダムに決めて出力する\nexport const fStatusLights = (n : number) : number[][] => {\n    return [...Array(n).keys()].map(i => {\n        return [...Array(n).keys()].map(j => {\n            return Math.floor(Math.random()*2);\n        });\n    });\n}\n\n\n// 拡大隣接行列：つまりは各マスから各マスに、写像が対応するかに関する真偽値(binary)の、有効グラフの行列\n// を出力する\nexport const fMapLights = (n : number) : number[][] => {\n    return [...Array(n*n).keys()].map(i => {\n        return [...Array(n*n).keys()].map(j => {\n            if (\n                i === j || //あるマスにおける自分に対する写像\n                (0 <= i-1 && i-1 === j && j%n!==n-1) || //左側のマスに対する写像\n                (i+1 < n*n && i+1 === j && j%n!==0) || //右側のマスに対する写像\n                (0 <= i-n && i-n === j) || //下側のマスに対する写像\n                (i+n < n*n && i+n === j) //上側に対する写像\n            ) return 1;\n            return 0;\n        });\n    });\n}\n\n\n// (N*N) * (N*N) の単位行列を出力する\nexport const fIdt_mtrx = (n : number) : number[][] => {\n    return [...Array(n*n).keys()].map(i => {\n        return [...Array(n*n).keys()].map(j => {\n            if (i===j) return 1;\n            return 0;\n        });\n    });\n}\n\n\n// 行列が単位行列か判定して真偽値を出力する\nexport const isIdt_mtrx = (mtrx : number[][]) : boolean => {\n    return !mtrx.some((row,idx1) => {\n        return row.some((j,idx2) => {\n            return (idx1===idx2 && j!==1) || (idx1!==idx2 && j!==0);\n        });\n    });\n}\n\n\n// 配列Deepコピー\nexport const arrayDeepCp = (array: number[]) : number[] => {\n    return JSON.parse(JSON.stringify(array));\n}\n\n\n// TODO refact\n// F2体上ににおいて、ある行列の逆行列を出力する\nexport const F2_Gauss_Jordan = (n : number, toIdt : number[][], mapLightsInv : number[][]) : boolean|number[][] => {\n\n    // 逆行列が作成できるまで、N回までループ\n    while (!isIdt_mtrx(toIdt)) {\n        // 各行に関して処理\n        toIdt.forEach((row, i) => {\n            // 既に完成している行はスキップ\n            if (row.filter(v => v===1 ).length === 1 && row[i]===1) return;\n\n            row.forEach((v, j) => {\n                // rowの中で(i,i)以外で1になっているところのみ処理\n                // 単位行列にしたいので、対角以外の1は許容できない\n                // => それ以外はスキップ\n                if (j===i || v!==1) return;\n\n                // (0,0,..<= all zero,\n                // ,1 <= index=j\n                // ,..0 <= index=i not one\n                // ,..) := jFrontAllZeroRow\n                let jFrontAllZeroRow : number[] = [];\n                let idx : number;\n                toIdt.some((row_, i_) => {\n                    if (i_!==i && !row_.slice(0, j).includes(1) && row_[i]!==1) {\n                        jFrontAllZeroRow = arrayDeepCp(row_);\n                        idx = i_;\n                        return true;\n                    }\n                    return false;\n                });\n                jFrontAllZeroRow.forEach((v_, j_) => {\n                    toIdt[i][j_] = (toIdt[i][j_] + v_)&1;\n                    mapLightsInv[i][j_] = (mapLightsInv[i][j_] + mapLightsInv[idx][j_])&1;\n                });\n            });\n        });\n        // ソート：一部ソートしないと解けない問題がある\n        // e.g. N=10, etc\n\n        // ソート前\n        let bef = toIdt.map(row => { return row.join(''); } );\n\n        // 重複行があれば逆行列は存在しない\n        let isDuplicated = bef.filter(function (x, i, self) { return self.indexOf(x) === i && i !== self.lastIndexOf(x); });\n        if (isDuplicated.length > 0) break;\n        toIdt.sort().reverse(); // ⚠️  破壊的変更\n\n        // ソート後\n        let aft = toIdt.map(row => { return row.join(''); } );\n        // rowのindex->index推移図\n        let btoa = bef.map(row => { return aft.indexOf(row); });\n        let tmp = [...Array(n)];\n        btoa.forEach((j,i) => { tmp[j] = arrayDeepCp(mapLightsInv[i]); });\n        // toIdtに合わせてmapLightsInvのソート\n        tmp.forEach((row,i) => { mapLightsInv[i] = arrayDeepCp(row); });\n    }\n\n    // 逆行列が作れなかった\n    if (!isIdt_mtrx(toIdt)) {\n        console.warn(\"Inverse Matrix isnt EXIST!\");\n        return false;\n    }\n\n    console.log(\"toIdt\", \"\\n\", toIdt.map(xs => {return xs.join(\", \")}).join(\"\\n\"), \"\\n\");\n    console.log(\"mapLightsInv\", \"\\n\", mapLightsInv.map(xs => {return xs.join(\", \")}).join(\"\\n\"), \"\\n\");\n    return mapLightsInv;\n}\n\n\nexport const eachSlice = (arr : number[], n : number = 2) : number[][] => {\n    return [...Array(Math.floor(arr.length / n)).keys()].map(i => {\n        return arr.slice(i*n, i*n + n);\n    });\n}\n\n\n// 答のマップを返す \nexport const toShowAnsMap = (state : number[], toAnsMtrx : number[][], n : number) : number[][] => {\n    return eachSlice(toAnsMtrx.map(row => {\n        return row.map((i,idx) => {\n            return (i*state[idx]);\n        }).filter(i=>i===1).length&1;\n    }), n);\n}\n","import React, { useRef } from 'react';\n\nimport { useFrame } from 'react-three-fiber';\n\nfunction ThreeBox(props) {\n    const mesh = useRef();\n\n    const n = props.n;\n    const baseWid = window.innerWidth > window.innerHeight ? window.innerHeight : window.innerWidth*1.25;\n    const boxSize = baseWid / (n*2);\n\n    useFrame(() => {(props.showAnsFlag && props.ansMap[props.x][props.y]===1) ? mesh.current.rotation.y += 0.1 : mesh.current.rotation.y = 0 });\n\n    return (\n        <mesh\n            {...props}\n            ref={mesh} >\n                <boxBufferGeometry attach=\"geometry\" args={[boxSize, boxSize, boxSize]} />\n                <meshStandardMaterial attach=\"material\" color={props.color} />\n        </mesh>\n    );\n}\n\nexport default ThreeBox;\n","import React, { useRef, useState } from 'react';\n\nimport { isProblemDifficult, fStatusLights, fMapLights, fIdt_mtrx, F2_Gauss_Jordan, toShowAnsMap } from '../modules/lightsout';\n\nimport ThreeBox from '../components/ThreeBox';\n\n////////////////////////////////////////////////////////////////////////////\n//                            パズルの定義\n////////////////////////////////////////////////////////////////////////////\n\nconst N = !window.location.href.split(\"#\")[1] || parseInt(window.location.href.split(\"#\")[1]) < 2 ? 3 : parseInt(window.location.href.split(\"#\")[1]);\n\nconst baseWid = window.innerWidth > window.innerHeight ? window.innerHeight : window.innerWidth*1.25;\nconst boxSize = baseWid / (N*2);\n\n// Light Outs ライトの初期値\nconst statusLights = fStatusLights(N);\n\n// この問題に関して、解が一意的に存在するか判定しやすいかの是非\nconsole.log(\n    isProblemDifficult(N) ? \"Difficult\" : \"Easy\"\n);\n\n// 拡大隣接行列->単位行列にする予定\nconst toIdt = fMapLights(N);\n\n// 単位行列->拡大隣接行列の逆行列にする予定\nconst mapLightsInv = fIdt_mtrx(N);\n\n// 拡大隣接行列の逆行列　存在しない時はnull\nconst toAnsMtrx = F2_Gauss_Jordan(N, toIdt, mapLightsInv);\n\n// 答の場所を示すライトの位置の初期値\nconst defaultAnsMap = [];\nfor (let i = 0; i < N; i++) {\n    defaultAnsMap[i] = [];\n    for (let j = 0; j < N; j++) defaultAnsMap[i][j] = 0;\n}\n\n// 答の場所を示すライトの位置\nlet ansMap = (!isProblemDifficult(N) && toAnsMtrx) ? toShowAnsMap(statusLights.flat(), toAnsMtrx, N) : defaultAnsMap;\n\n////////////////////////////////////////////////////////////////////////////\n\n\n// TODO コンポーネント分け\nfunction colorDef(active) {\n    if (active) return \"darkorange\";\n    return \"darkslateblue\";\n}\n\nfunction clickBox(index) {\n    const y = index[0],\n          x = index[1];\n    statusLights[x][y] = ~statusLights[x][y] & 1;\n\n    [[1,0],[0,1],[-1,0],[0,-1]].forEach((add) => {\n        if(0<=add[0]+x && add[0]+x<N && 0<=add[1]+y && add[1]+y<N) {\n            statusLights[add[0]+x][add[1]+y] = ~statusLights[add[0]+x][add[1]+y] & 1;\n        }\n    });\n\n    if (!isProblemDifficult(N) && toAnsMtrx) {\n        ansMap = toShowAnsMap(statusLights.flat(), toAnsMtrx, N);\n    }\n    \n    console.log(statusLights.map(xs => {return xs.join(\", \")}).join(\"\\n\"));\n    console.log(ansMap.map(xs => {return xs.join(\", \")}).join(\"\\n\"));\n}\n\nfunction ThreeMatrixBox(props) {\n    const mesh = useRef();\n\n    const [state, setState] = useState(props);\n\n    const basezDistance = boxSize + boxSize / 2;\n\n    const preIdx = [...Array(N).keys()].map((_, i) => {\n        return (i - Math.floor(N / 2)) * basezDistance + (N&1 ? 0 : basezDistance/2);\n    });\n\n    const idxes = preIdx.map(i => {return preIdx.map(j => {return [i, j, 0] }) }).flat();\n\n    const lists = [];\n\n    for(let xyz in idxes) {\n        let y = parseInt(parseInt(idxes[xyz][0] / basezDistance) + Math.floor(N/2)),\n            x = (N-1)-parseInt(parseInt(idxes[xyz][1] / basezDistance) + Math.floor(N/2));\n\n        lists.push(\n            <ThreeBox\n                onClick={() => {\n                    clickBox([y,x]);\n                    setState({...state, active: statusLights, answer: ansMap});\n                } }\n                key={xyz}\n                y={y}\n                x={x}\n                n={N}\n                showAnsFlag={props.showAnsFlag}\n                ansMap={state.answer}\n                position={idxes[xyz]}\n                color={colorDef(state.active[x][y])}\n            />\n        );\n    }\n\n    return (\n        <mesh>{lists}</mesh>\n    );\n}\n\nThreeMatrixBox.defaultProps = {\n    active: statusLights,\n    answer: ansMap\n}\n\nexport default ThreeMatrixBox;\n","import { useEffect } from 'react';\n\nimport { extend, useThree } from 'react-three-fiber';\n\n// ⚠️  CAUTIONS!!!!\n// in :973 comment outed\n// vim ../node_modules/three/examples/jsm/controls/OrbitControls.js\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls });\n\nconst CameraController = () => {\n    const { camera, gl } = useThree();\n    const cameraDistance = 700;;\n    useEffect(() => {\n            const controls = new OrbitControls(camera, gl.domElement);\n            camera.position.set(0, 0, cameraDistance);\n            controls.minDistance = 0;\n            controls.maxDistance = 1000;\n            return () => {\n                controls.dispose();\n            };\n        },\n        [camera, gl]\n    );\n    return null;\n};\n\nexport default CameraController;\n","import React from 'react';\n\nimport { Canvas } from 'react-three-fiber';\n\nimport ThreeMatrixBox from '../components/ThreeMatrixBox';\nimport CameraController from '../components/CameraController';\n\nfunction CanvasC(props) {\n    return (\n        <Canvas>\n            <CameraController />\n            <ambientLight />\n            <pointLight position={[0, 0, 1000]} />\n            <ThreeMatrixBox showAnsFlag={props.showAnsFlag} />\n        </Canvas>\n    );\n}\n\nexport default CanvasC;\n","import React, { useState } from 'react';\n\nimport CanvasC from './CanvasC';\n\nimport styled, { keyframes } from 'styled-components';\n\nimport { css } from 'emotion';\n\nfunction App(props) {\n    const [state, setState] = useState(props);\n\n    return (\n        <AppContainer>\n            <AnsShowButton\n                onClick={() => { setState({...state, showAnsFlag: !state.showAnsFlag }) } }\n                className={state.showAnsFlag ? hide : show}\n                >{state.showAnsFlag ? \"HIDE\" : \"SHOW\"} ANSWER\n            </AnsShowButton>\n            <CanvasC showAnsFlag={state.showAnsFlag} />\n            <Link href=\"https://github.com/zodiac-G12/lightouts#lights-out\">\n                Documents :)\n            </Link>\n        </AppContainer>\n    );\n}\n\nApp.defaultProps = {\n    showAnsFlag: false\n}\n\n\nconst AppContainer = styled.div`\n    margin: 0;\n    padding: 0;\n    height: 100vh;\n    width: 100vw;\n`;\n\nconst AnsShowButton = styled.button`\n    z-index: 1;\n    position: absolute;\n    top: 5vh;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 30vh;\n    text-align: center;\n    font-size: 3vh;\n    padding: 1vh;\n    outline: none;\n    border: solid 1px lime;\n    // box-shadow: 0px 0px 10px 10px darkslategray;\n    // border-radius: 5vh;\n`;\n\nconst glimpse = keyframes`\n    from {\n        text-shadow: 0px 0px 0.5vh darkorange, -0px -0px 0.7vh red;\n    }\n    to {\n        text-shadow: 0px 0px 0.9vh darkorange, -0px -0px 1vh red;\n    }\n`;\n\nconst linkPositionTop = window.innerHeight > window.innerWidth ? '80vh' : '90vh';\n\nconst Link = styled.a`\n    z-index: 1;\n    position: fixed;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 50vh;\n    text-align: center;\n    top: ${linkPositionTop};\n    font-size: 3vh;\n    color: orange;\n    text-shadow: 0px 0px 0.5vh darkorange, -0px -0px 0.7vh red;\n    // animation: ${glimpse} inifinite 2s ease-in-out;\n    background: rgba(0,0,0,0);\n    text-decoration: none;\n`;\n\nconst hide = css`\n    color: white;\n    background: black;\n    box-shadow: 0px 0px 10px 10px darkslategray;\n`;\n\nconst show = css`\n    color: black;\n    background: white;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport * as serviceWorker from './etc/serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}